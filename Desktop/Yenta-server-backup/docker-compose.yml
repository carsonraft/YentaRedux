version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: yenta_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Yenta Server (Backend API)
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    restart: unless-stopped
    container_name: yenta-server
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-secure_password_change_in_production}@db:5432/yenta_db
      # Individual DB variables
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: yenta_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-secure_password_change_in_production}
      PORT: 3001
      FRONTEND_URL: https://yentaconnect.com

      # Authentication
      JWT_SECRET: ${JWT_SECRET}

      # OpenAI
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # Stripe
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}

        # Google Calendar
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: https://yentaconnect.com/api/calendar/callback

        # OAuth (when ready)
      LINKEDIN_CLIENT_ID: ${LINKEDIN_CLIENT_ID:-}
      LINKEDIN_CLIENT_SECRET: ${LINKEDIN_CLIENT_SECRET:-}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID:-}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET:-}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID:-}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET:-}

        # Email
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER:-}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-}

    ports:
      - "3001:3001"
    volumes:
      - ./server/logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "const http=require('http');http.get('http://localhost:3001/api/health',(r)=>{process.exit(r.sta
  tusCode==200?0:1)}).on('error',()=>process.exit(1))"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

    # Yenta Client (Frontend)
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    restart: unless-stopped
    container_name: yenta-client
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx-ssl.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: yenta-network
